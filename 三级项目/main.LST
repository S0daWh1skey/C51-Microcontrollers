C51 COMPILER V7.06   MAIN                                                                  06/11/2017 18:09:54 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   2          #include"delay.h"
   3          #include"display.h"
   4          #include"playmusic.h"
   5          #include"keyscan.h"
   6          #include"timer.h"
   7          #include"18b20.h"
   8          unsigned char num;//获得键盘按键的数字
   9          unsigned char hour,minute,second;//定义时分秒
  10          unsigned char Ahour,Aminute,Asecond;//定义闹钟的时分秒
  11          bit UpdateTimeFlag;//定义更新时间标志
  12          unsigned char code dofly_DuanMa[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};// 显示段码值0~9
  13          unsigned char code dofly_WeiMa[]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};//分别对应相应的数码管点亮,即位
             -码
  14          unsigned char TempData[8]; //存储显示值的全局变量
  15          bit Time_seted_flag=0; //时间设置标志位
  16          bit Temp_show_flag=0; //温度显示标志位
  17          bit Alarm_seted_flag=0;//闹钟设置标志位
  18          bit Temp_showed_flag=0;//已经显示温度标志位
  19          bit Alarm_closed_flag=0;
  20          int temp; //温度
  21          int temphour;   //临时储存当前小时
  22          /*------------------------------------------------
  23                              主函数
  24          ------------------------------------------------*/
  25          void main (void)
  26          {
  27   1      //unsigned char num;                  
  28   1      Init_Timer0();//调用定时器初始化函数
  29   1      while (1)         //主循环
  30   1      {
  31   2      num=KeyScan();//读取键盘数字
  32   2      switch(num)//switch函数 控制不同功能
  33   2      {
  34   3                  case 1:hour++;if(hour==24)hour=0;     //正常时间 小时 加1
  35   3                   break;
  36   3                      case 3:minute++;if(minute==60)minute=0;     //分钟加1
  37   3                       break;
  38   3                      case 5:second++;if(second==60)second=0;     //分钟加1
  39   3                       break;
  40   3                      case 7:Time_seted_flag=1; //启动时钟
  41   3                              break;
  42   3                      case 8:Alarm_seted_flag=1;//储存闹钟 设置闹钟
  43   3                              break;
  44   3                      case 2:Temp_show_flag=1; //显示温度
  45   3                               break;
  46   3                      case 4:Alarm_closed_flag=1;//闹钟关闭标志位
  47   3                              break;
  48   3                      default:break;
  49   3      }
  50   2      
  51   2      if(Alarm_seted_flag==1){
  52   3              Ahour=hour;      //将显示屏上显示的时间储存到闹钟变量里
  53   3              Aminute=minute;
  54   3              Asecond=second;
C51 COMPILER V7.06   MAIN                                                                  06/11/2017 18:09:54 PAGE 2   

  55   3              hour=minute=second=0;//将显示屏变为初始状态00-00-00
  56   3              Time_seted_flag=0;//表示时间没设置
  57   3              Alarm_seted_flag=0;//闹钟未设置 （不会在下次循环中继续执行这个分支）
  58   3      }
  59   2      
  60   2      if(UpdateTimeFlag==1)//时间更新标志位=1 开始在显示屏更新时间
  61   2      {
  62   3       UpdateTimeFlag=0;//更新标志位重置 以便重新进入
  63   3       TempData[0]=dofly_DuanMa[hour/10]; //时 得到两位数的前一位                     //数据的转换，因我们采用数码管0~9的显示,将数
             -据分开
  64   3       TempData[1]=dofly_DuanMa[hour%10]; //得到两位数的后一位
  65   3       TempData[2]=0x40;                                                      //加入"-"
  66   3       TempData[3]=dofly_DuanMa[minute/10];//分
  67   3       TempData[4]=dofly_DuanMa[minute%10];
  68   3       TempData[5]=0x40;//显示为 "-"
  69   3       TempData[6]=dofly_DuanMa[second/10];//秒
  70   3       TempData[7]=dofly_DuanMa[second%10];    
  71   3      }       //保存在八段数码管的数组里
  72   2      
  73   2      if(Temp_show_flag==1&&Temp_showed_flag==0){  //温度显示标志位是1 温度已经显示标志位是0
  74   3      //hour=11;
  75   3      temp=0;
  76   3      temp=ReadTemperature();  //使用18b20 读取温度
  77   3      temphour=hour; //将当前的小时保存到临时小时变量里
  78   3      temp=0;
  79   3      temp=ReadTemperature();
  80   3      hour=temp*0.625; //将读取的温度转换为两位数的摄氏度
  81   3      Temp_showed_flag=1;     //表示已经显示温度
  82   3      Temp_show_flag=0;       //下次循环不进入此分支
  83   3      }
  84   2      if(Temp_showed_flag==1&&Temp_show_flag==1){ //如果再次按下显示温度按键
  85   3              hour=temphour;//将保存于临时变量中的小时值显示
  86   3              Temp_show_flag=0;//温度显示标志位返回初始化
  87   3              Temp_showed_flag=0;//温度已经显示标志位返回初始化
  88   3      }
  89   2              //DelayMs(200);
  90   2      if(Ahour==hour&&Aminute==minute&&Asecond==second){ //闹钟时间与当前时间相等
  91   3              //hour=minute=second=0;
  92   3              if(hour!=0||second!=0||minute!=0){ //且都不等于0
  93   4              //hour=minute=second=0;
  94   4              //alarm();
  95   4          PlayMusic();  //闹钟开始
  96   4              DelayMs(5000);
  97   4              if(Time_seted_flag==1&&Alarm_closed_flag==0){ //闹钟未关闭
  98   5              Ahour=hour; //重置闹钟时间
  99   5              Aminute=minute;
 100   5              Asecond=second;  //闹钟会持续响
 101   5              }
 102   4                      }
 103   3              }
 104   2      }
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    351    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
C51 COMPILER V7.06   MAIN                                                                  06/11/2017 18:09:54 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
